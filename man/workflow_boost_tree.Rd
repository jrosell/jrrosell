% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidymodels.R
\name{workflow_boost_tree}
\alias{workflow_boost_tree}
\title{Create an xgboost tunable workflow for regression and classification}
\usage{
workflow_boost_tree(rec, engine = "xgboost", counts = TRUE, ...)
}
\arguments{
\item{rec}{prerocessing recipe to build the workflow}

\item{engine}{xgboost, lightgbm (xgboost by default)}

\item{counts}{Optional logic argument wether mtry use counts or not}

\item{...}{optional engine arguments}
}
\description{
Create an xgboost tunable workflow for regression and classification
}
\examples{
library(tidymodels)
library(xgboost)
library(modeldata)
library(future)
data(cells)
split <- cells |>
  mutate(across(where(is.character), as.factor)) |>
  sample_n(500) |>
  initial_split(strata = class)
train <- training(split)
folds <- vfold_cv(train, v = 2, strata = class)
wf <- train |>
  recipe(case ~ .) |>
  step_integer(all_nominal_predictors()) |>
  workflow_boost_tree()
doFuture::registerDoFuture()
plan(sequential)
res <- wf |>
  tune_grid(
    folds,
    grid = 2,
    metrics = metric_set(roc_auc),
    control = control_grid(save_workflow = TRUE, verbose = FALSE)
  )
res |> collect_metrics()
res |> last_metrics(split, "roc_auc")
best <- res |> fit_best()
best |>
  augment(testing(split)) |>
  roc_auc(case, .pred_Test) |>
  pull(.estimate)

}
\keyword{tidymodels}
