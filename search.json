[{"path":[]},{"path":"https://jrosell.github.io/jrrosell/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://jrosell.github.io/jrrosell/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://jrosell.github.io/jrrosell/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jordi Rosell. Author, maintainer.","code":""},{"path":"https://jrosell.github.io/jrrosell/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rosell J (2024). jrrosell: Personal R package Jordi Rosell. R package version 0.0.0.9010, https://github.com/jrosell/jrrosell.","code":"@Manual{,   title = {jrrosell: Personal R package for Jordi Rosell},   author = {Jordi Rosell},   year = {2024},   note = {R package version 0.0.0.9010},   url = {https://github.com/jrosell/jrrosell}, }"},{"path":"https://jrosell.github.io/jrrosell/index.html","id":"jrrosell","dir":"","previous_headings":"","what":"Personal R package for Jordi Rosell","title":"Personal R package for Jordi Rosell","text":"Personal R package Jordi Rosell","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/add_row_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Add hash for each row — add_row_hash","title":"Add hash for each row — add_row_hash","text":"sorts column names, hash every row add column.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/add_row_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add hash for each row — add_row_hash","text":"","code":"add_row_hash(df, primary_keys)"},{"path":"https://jrosell.github.io/jrrosell/reference/add_row_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add hash for each row — add_row_hash","text":"df data.frame primary_keys column anmes primary key","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/add_row_hash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add hash for each row — add_row_hash","text":"","code":"df <- data.frame(   id = c(1, 2, 3),   name = c(\"AAAAA\", \"BBBB\", \"CCC\") ) add_row_hash(df, id) #>   id  name                         row_hash #> 1  1 AAAAA ba4e70c509c64f4dc8d06c162c8c053c #> 2  2  BBBB 665a0897d0b2b95a72afbb1dfaa8f753 #> 3  3   CCC 62d9fe65ce0f1a9beae690e0f3251bab"},{"path":"https://jrosell.github.io/jrrosell/reference/as.bitstring.html","id":null,"dir":"Reference","previous_headings":"","what":"Data type utilities — as.bitstring","title":"Data type utilities — as.bitstring","text":"Get bit representation double number","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/as.bitstring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data type utilities — as.bitstring","text":"","code":"as.bitstring(x)"},{"path":"https://jrosell.github.io/jrrosell/reference/as.bitstring.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data type utilities — as.bitstring","text":"https://youtu./J4DnzjIFj8w","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/as.bitstring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data type utilities — as.bitstring","text":"x numeric vetor.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/as.bitstring.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data type utilities — as.bitstring","text":"Get bit representation double number Using rev() ensures bit order correct, binary representation aligns usual convention MSB first LSB last. numToBits() returns bits reverse order, without rev(), end LSB first MSB last.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/as.bitstring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data type utilities — as.bitstring","text":"","code":"0.1 + 0.2 == 0.3 #> [1] FALSE as.bitstring(0.1 + 0.2) #> [1] \"00000101010101010101000100000101000001010000010100000101000001010000010100000101000001010000010100000101000001010000010100010000\" as.bitstring(0.3) #> [1] \"00000101010101010101000100000101000001010000010100000101000001010000010100000101000001010000010100000101000001010000010100000101\""},{"path":"https://jrosell.github.io/jrrosell/reference/aside.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple aside functions with base R pipe — aside","title":"Multiple aside functions with base R pipe — aside","text":"Multiple aside functions base R pipe","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/aside.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple aside functions with base R pipe — aside","text":"","code":"aside(x, ...)"},{"path":"https://jrosell.github.io/jrrosell/reference/aside.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple aside functions with base R pipe — aside","text":"x object ... functions run aside","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/aside.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple aside functions with base R pipe — aside","text":"","code":"n_try <- 1 rnorm(200) |>   matrix(ncol = 2) |>   aside(     print(\"Matrix prepared\"),     print(n_try)   ) |>   colSums() #> [1] \"Matrix prepared\" #> [1] 1 #> [1]  7.07892 11.48568"},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate split proportion — calc_split_prop","title":"Calculate split proportion — calc_split_prop","text":"data frame, returns minimal split proportion validation.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate split proportion — calc_split_prop","text":"","code":"calc_split_prop(df)"},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_prop.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Calculate split proportion — calc_split_prop","text":"https://stats.stackexchange.com//305063/7387","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate split proportion — calc_split_prop","text":"df data frame","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_prop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate split proportion — calc_split_prop","text":"calc_validation_size function returns optimal split proportion according number rows validation set.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate split proportion — calc_split_prop","text":"","code":"calc_split_prop(data.frame(row = 1:891)) #> [1] 0.02368897"},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate split size — calc_split_size","title":"Calculate split size — calc_split_size","text":"binary classification problems, desired std_err returns minimal assesment/validation set size.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate split size — calc_split_size","text":"","code":"calc_split_size(std_err = 0.001)"},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_size.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Calculate split size — calc_split_size","text":"https://stats.stackexchange.com//304996/7387","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate split size — calc_split_size","text":"std_err desired std_err numeric (default 0.001)","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_size.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate split size — calc_split_size","text":"calc_validation_size function returns minimal validation size expected probabilities desired error. s","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/calc_split_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate split size — calc_split_size","text":"","code":"calc_split_size() #> [1] 250000 calc_split_size(std_err = 0.02) #> [1] 625"},{"path":"https://jrosell.github.io/jrrosell/reference/chars.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector of characters from a string — chars","title":"Create a vector of characters from a string — chars","text":"Create vector characters string","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/chars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector of characters from a string — chars","text":"","code":"chars(x, ...)"},{"path":"https://jrosell.github.io/jrrosell/reference/chars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector of characters from a string — chars","text":"x vector characters length 1. ... unused","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/chars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vector of characters from a string — chars","text":"vector characters","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/chars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a vector of characters from a string — chars","text":"chars expects single string input. create list , consider lapply(strings, chars).","code":""},{"path":[]},{"path":"https://jrosell.github.io/jrrosell/reference/chars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vector of characters from a string — chars","text":"","code":"chars(\"hola\") #> [1] \"h\" \"o\" \"l\" \"a\""},{"path":"https://jrosell.github.io/jrrosell/reference/check_installed_gihub.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the last github version is installed — check_installed_gihub","title":"Check if the last github version is installed — check_installed_gihub","text":"Check last main github version installed.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/check_installed_gihub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the last github version is installed — check_installed_gihub","text":"","code":"check_installed_gihub(repo)"},{"path":"https://jrosell.github.io/jrrosell/reference/check_installed_gihub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the last github version is installed — check_installed_gihub","text":"repo github repo/package. Ex: check_installed_gihub(\"tidyverse/dplyr\")","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/check_installed_gihub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the last github version is installed — check_installed_gihub","text":"","code":"if (FALSE) {   check_installed_gihub(\"jrosell/jrrosell\") }"},{"path":"https://jrosell.github.io/jrrosell/reference/count_duplicated_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of duplicated rows — count_duplicated_rows","title":"Count the number of duplicated rows — count_duplicated_rows","text":"Count number duplicated rows","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/count_duplicated_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of duplicated rows — count_duplicated_rows","text":"","code":"count_duplicated_rows(df)"},{"path":"https://jrosell.github.io/jrrosell/reference/count_duplicated_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of duplicated rows — count_duplicated_rows","text":"df data.frame","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/count_duplicated_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the number of duplicated rows — count_duplicated_rows","text":"","code":"count_duplicated_rows(data.frame(a = c(1, 2, 3), b = c(3, 4, 5))) #> [1] 0 count_duplicated_rows(data.frame(a = c(1, 2, 3), b = c(1, 4, 5))) #> [1] 0"},{"path":"https://jrosell.github.io/jrrosell/reference/count_sorted.html","id":null,"dir":"Reference","previous_headings":"","what":"Count a variable or variables sorted — count_sorted","title":"Count a variable or variables sorted — count_sorted","text":"returns ordered counts variable data.frame.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/count_sorted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count a variable or variables sorted — count_sorted","text":"","code":"count_sorted(df, ...)"},{"path":"https://jrosell.github.io/jrrosell/reference/count_sorted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count a variable or variables sorted — count_sorted","text":"df data.frame ... variables use arguments count","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/count_sorted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count a variable or variables sorted — count_sorted","text":"","code":"data.frame(a = c(\"x\", \"y\", \"x\"), b = c(\"z\", \"z\", \"n\")) |>   count_sorted(a) #>   a n #> 1 x 2 #> 2 y 1"},{"path":"https://jrosell.github.io/jrrosell/reference/detect_cores.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect cores that could be used — detect_cores","title":"Detect cores that could be used — detect_cores","text":"Select cores max/min available cores.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/detect_cores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect cores that could be used — detect_cores","text":"","code":"detect_cores(max = 10, min = 2)"},{"path":"https://jrosell.github.io/jrrosell/reference/detect_cores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect cores that could be used — detect_cores","text":"max integer max desired cores (default 10) min integer min desired cores (default 2)","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/detect_cores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect cores that could be used — detect_cores","text":"detect_cores function uses parallelly package. returns desired max cores available fails min cores available.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/detect_cores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect cores that could be used — detect_cores","text":"","code":"cores <- detect_cores(max = 5, min = 1) print(cores) #> [1] 4 if (FALSE) {   library(jrrosell)   library(future)   plan(multisession, workers = detect_cores(max = 10, min = 2))   plan(sequential) }"},{"path":"https://jrosell.github.io/jrrosell/reference/fit_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a workflow with specific parameters — fit_results","title":"Fit a workflow with specific parameters — fit_results","text":"Fit workflow specific parameters","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/fit_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a workflow with specific parameters — fit_results","text":"","code":"fit_results(wf, resamples, param_info = NULL, grid = 10, fn = \"tune_grid\", ...)"},{"path":"https://jrosell.github.io/jrrosell/reference/fit_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a workflow with specific parameters — fit_results","text":"wf workflow resamples rset param_info tune_* functions grid tune_* functions fn name function run tuning ... Optional engine arguments","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/fit_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a workflow with specific parameters — fit_results","text":"","code":"library(tidymodels) #> ── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ── #> ✔ broom        1.0.7     ✔ recipes      1.1.0 #> ✔ dials        1.3.0     ✔ rsample      1.2.1 #> ✔ dplyr        1.1.4     ✔ tibble       3.2.1 #> ✔ ggplot2      3.5.1     ✔ tidyr        1.3.1 #> ✔ infer        1.0.7     ✔ tune         1.2.1 #> ✔ modeldata    1.4.0     ✔ workflows    1.1.4 #> ✔ parsnip      1.2.1     ✔ workflowsets 1.1.0 #> ✔ purrr        1.0.2     ✔ yardstick    1.3.1 #> ── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ── #> ✖ purrr::discard() masks scales::discard() #> ✖ dplyr::filter()  masks stats::filter() #> ✖ dplyr::lag()     masks stats::lag() #> ✖ recipes::step()  masks stats::step() #> • Use tidymodels_prefer() to resolve common conflicts. library(xgboost) #>  #> Attaching package: ‘xgboost’ #> The following object is masked from ‘package:dplyr’: #>  #>     slice library(modeldata) data(cells) split <- cells |>   mutate(across(where(is.character), as.factor)) |>   sample_n(500) |>   initial_split(strata = case) train <- training(split) resamples <- vfold_cv(train, v = 2, strata = case) wf_spec <- train |>   recipe(case ~ .) |>   step_integer(all_nominal_predictors()) |>   workflow(boost_tree(mode = \"classification\")) res_spec <- wf_spec |> fit_results(resamples) res_spec |> collect_metrics() #> # A tibble: 3 × 6 #>   .metric     .estimator  mean     n std_err .config              #>   <chr>       <chr>      <dbl> <int>   <dbl> <chr>                #> 1 accuracy    binary     0.521     2 0.0320  Preprocessor1_Model1 #> 2 brier_class binary     0.316     2 0.0155  Preprocessor1_Model1 #> 3 roc_auc     binary     0.504     2 0.00879 Preprocessor1_Model1"},{"path":"https://jrosell.github.io/jrrosell/reference/glimpses.html","id":null,"dir":"Reference","previous_headings":"","what":"Glimpse multiple datasets — glimpses","title":"Glimpse multiple datasets — glimpses","text":"Glimpse multiple datasets","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/glimpses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glimpse multiple datasets — glimpses","text":"","code":"glimpses(...)"},{"path":"https://jrosell.github.io/jrrosell/reference/glimpses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glimpse multiple datasets — glimpses","text":"... Multiple data.frame","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/glimpses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glimpse multiple datasets — glimpses","text":"","code":"df1 <- data.frame(a = c(1, 2)) df2 <- data.frame(b = c(3, 4)) glimpses(df1, df2) #> df1 2 rows and 1 columns with a 2 distinct values.  #> df2 2 rows and 1 columns with b 2 distinct values."},{"path":"https://jrosell.github.io/jrrosell/reference/jrrosell-package.html","id":null,"dir":"Reference","previous_headings":"","what":"jrrosell: Personal R package for Jordi Rosell — jrrosell-package","title":"jrrosell: Personal R package for Jordi Rosell — jrrosell-package","text":"Useful functions personal usage.","code":""},{"path":[]},{"path":"https://jrosell.github.io/jrrosell/reference/jrrosell-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"jrrosell: Personal R package for Jordi Rosell — jrrosell-package","text":"Maintainer: Jordi Rosell jroselln@gmail.com (ORCID)","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/last_fit_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Do the last fit and get the metrics — last_fit_metrics","title":"Do the last fit and get the metrics — last_fit_metrics","text":"last fit get metrics","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/last_fit_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do the last fit and get the metrics — last_fit_metrics","text":"","code":"last_fit_metrics(res, split, metric)"},{"path":"https://jrosell.github.io/jrrosell/reference/last_fit_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do the last fit and get the metrics — last_fit_metrics","text":"res Tune results split initial split object metric metric use select best workflow","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/last_fit_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Do the last fit and get the metrics — last_fit_metrics","text":"","code":"library(tidymodels) library(xgboost) library(modeldata) data(cells) split <- cells |>   mutate(across(where(is.character), as.factor)) |>   sample_n(500) |>   initial_split(strata = class) train <- training(split) folds <- vfold_cv(train, v = 2, strata = class) wf <- train |>   recipe(case ~ .) |>   step_integer(all_nominal_predictors()) |>   workflow_boost_tree() res <- wf |>   tune::tune_grid(     resamples = folds,     grid = 2,     metrics = metric_set(roc_auc),     control = tune::control_grid(save_workflow = TRUE, verbose = FALSE)   ) #> i Creating pre-processing data to finalize unknown parameter: mtry res |> collect_metrics() #> # A tibble: 2 × 13 #>    mtry trees min_n tree_depth learn_rate loss_reduction sample_size .metric #>   <int> <int> <int>      <int>      <dbl>          <dbl>       <dbl> <chr>   #> 1    22  1106    18         10     0.109   0.00000000279       0.516 roc_auc #> 2    38   871    29          6     0.0126  0.0000856           0.705 roc_auc #> # ℹ 5 more variables: .estimator <chr>, mean <dbl>, n <int>, std_err <dbl>, #> #   .config <chr> res |> last_fit_metrics(split, \"roc_auc\") #> # A tibble: 3 × 4 #>   .metric     .estimator .estimate .config              #>   <chr>       <chr>          <dbl> <chr>                #> 1 accuracy    binary         0.52  Preprocessor1_Model1 #> 2 roc_auc     binary         0.544 Preprocessor1_Model1 #> 3 brier_class binary         0.272 Preprocessor1_Model1 best <- res |> fit_best() best |>   augment(testing(split)) |>   roc_auc(case, .pred_Test) |>   pull(.estimate) #> [1] 0.5439137"},{"path":"https://jrosell.github.io/jrrosell/reference/name_unnamed_chunks.html","id":null,"dir":"Reference","previous_headings":"","what":"Name unnamed chunks in .Rmd or .qmd files Use with caution. — name_unnamed_chunks","title":"Name unnamed chunks in .Rmd or .qmd files Use with caution. — name_unnamed_chunks","text":"Name unnamed chunks .Rmd .qmd files Use caution.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/name_unnamed_chunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name unnamed chunks in .Rmd or .qmd files Use with caution. — name_unnamed_chunks","text":"","code":"name_unnamed_chunks(file_path)"},{"path":"https://jrosell.github.io/jrrosell/reference/name_unnamed_chunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name unnamed chunks in .Rmd or .qmd files Use with caution. — name_unnamed_chunks","text":"file_path file name","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/normalize_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Center and scale double vectors — normalize_vec","title":"Center and scale double vectors — normalize_vec","text":"Center scale double vectors","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/normalize_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center and scale double vectors — normalize_vec","text":"","code":"normalize_vec(...)"},{"path":"https://jrosell.github.io/jrrosell/reference/normalize_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center and scale double vectors — normalize_vec","text":"... double vector multiple double vectors","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/normalize_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Center and scale double vectors — normalize_vec","text":"","code":"normalize_vec(1, 2, 3, ) #> [1] -1  0  1"},{"path":"https://jrosell.github.io/jrrosell/reference/notify_finished.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a sound and send an email when a process finished — notify_finished","title":"Make a sound and send an email when a process finished — notify_finished","text":"notify_finished make sound using beepr::beep, compose email send returing blastula::smtp_send call results.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/notify_finished.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a sound and send an email when a process finished — notify_finished","text":"","code":"notify_finished(name, body = \"\", ..., sound = 1, tictoc_result = NULL)"},{"path":"https://jrosell.github.io/jrrosell/reference/notify_finished.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a sound and send an email when a process finished — notify_finished","text":"name process name (Required) body contents email (Default \"\") ... Additional arguments pass template function. using default template, can use font_family control base font, content_width control width main content; see blastula_template(). default, content_width set ⁠1000px⁠. Using widths less ⁠600px⁠ generally advised , necessary, sure test HTML emails wide range email clients sending intended recipients. Outlook mail client (Windows, Desktop) respect content_width. sound sound beepr::beep call (Default 1) tictoc_result result tictoc::toc (Default NULL)","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/notify_finished.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a sound and send an email when a process finished — notify_finished","text":"following environment variables set: MY_SMTP_USER MY_SMTP_RECIPIENT MY_SMTP_PASSWORD service password (gmail can use https://myaccount.google.com/apppasswords) MY_SMTP_PROVIDER blastula provider (gmail set)","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/notify_finished.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a sound and send an email when a process finished — notify_finished","text":"","code":"if (exists(\"not_run\")) {   tictoc::tic()   Sys.sleep(1)   jrrosell::notify_finished(\"job\", \"Well done\", sound = \"fanfare\", tictoc_result = tictoc::toc()) }"},{"path":"https://jrosell.github.io/jrrosell/reference/package_github_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Github name of the package — package_github_name","title":"Github name of the package — package_github_name","text":"Get name package DESCRIPTION file master branch github repo","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/package_github_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Github name of the package — package_github_name","text":"","code":"package_github_name(x, file_lines = NULL)"},{"path":"https://jrosell.github.io/jrrosell/reference/package_github_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Github name of the package — package_github_name","text":"x single repo/package check Ex: package_github_name(\"tidyverse/dplyr\") file_lines (default = NULL, internal)","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/package_github_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Github name of the package — package_github_name","text":"","code":"if (FALSE) {   package_github_name(\"jrosell/jrrosell\") }"},{"path":"https://jrosell.github.io/jrrosell/reference/package_github_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Github version of the package — package_github_version","title":"Github version of the package — package_github_version","text":"Get version DESCRIPTION file master branch github repo","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/package_github_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Github version of the package — package_github_version","text":"","code":"package_github_version(x, file_lines = NULL)"},{"path":"https://jrosell.github.io/jrrosell/reference/package_github_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Github version of the package — package_github_version","text":"x single repo/package check Ex: package_github_version(\"tidyverse/dplyr\") file_lines (default = NULL, internal)","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/package_github_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Github version of the package — package_github_version","text":"","code":"if (FALSE) {   package_github_version(\"jrosell/jrrosell\") }"},{"path":"https://jrosell.github.io/jrrosell/reference/plot_bars.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bars for non double columns — plot_bars","title":"Plot bars for non double columns — plot_bars","text":"Plot bars non double columns","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/plot_bars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bars for non double columns — plot_bars","text":"","code":"plot_bars(df, ..., top_values = 50)"},{"path":"https://jrosell.github.io/jrrosell/reference/plot_bars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot bars for non double columns — plot_bars","text":"df data.frame ... optional parameters geom_histogram top_values fist common values (default 50)","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/plot_bars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot bars for non double columns — plot_bars","text":"","code":"plot_bars(data.frame(a = c(\"x\", \"y\"), b = c(\"z\", \"z\")))"},{"path":"https://jrosell.github.io/jrrosell/reference/plot_histograms.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot histograms for double columns — plot_histograms","title":"Plot histograms for double columns — plot_histograms","text":"Plot histograms double columns","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/plot_histograms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot histograms for double columns — plot_histograms","text":"","code":"plot_histograms(df, ...)"},{"path":"https://jrosell.github.io/jrrosell/reference/plot_histograms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot histograms for double columns — plot_histograms","text":"df data.frame ... optional parameters geom_histogram","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/plot_histograms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot histograms for double columns — plot_histograms","text":"","code":"plot_histograms(data.frame(a = c(1, 2), b = c(1, 3))) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://jrosell.github.io/jrrosell/reference/plot_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot missing values — plot_missing","title":"Plot missing values — plot_missing","text":"Plot missing values","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/plot_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot missing values — plot_missing","text":"","code":"plot_missing(df)"},{"path":"https://jrosell.github.io/jrrosell/reference/plot_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot missing values — plot_missing","text":"df data.frame","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/plot_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot missing values — plot_missing","text":"","code":"plot_missing(data.frame(a = c(1, NA), b = c(NA, 4)))"},{"path":"https://jrosell.github.io/jrrosell/reference/plot_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a variable — plot_variable","title":"Plot a variable — plot_variable","text":"returns bar histogram variable","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/plot_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a variable — plot_variable","text":"","code":"plot_variable(df, variable, ..., type = \"numeric\")"},{"path":"https://jrosell.github.io/jrrosell/reference/plot_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a variable — plot_variable","text":"df data.frame variable variable use. ... params passed geom_* type numeric (default) nominal.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/plot_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a variable — plot_variable","text":"","code":"data.frame(a = c(\"x\", \"y\", \"y\"), b = c(\"z\", \"z\", \"x\")) |> plot_variable(a)"},{"path":"https://jrosell.github.io/jrrosell/reference/prep_juice.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep, juice and glimpse a recipe or workflow — prep_juice","title":"Prep, juice and glimpse a recipe or workflow — prep_juice","text":"Prep, juice glimpse recipe workflow","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/prep_juice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep, juice and glimpse a recipe or workflow — prep_juice","text":"","code":"prep_juice(object)"},{"path":"https://jrosell.github.io/jrrosell/reference/prep_juice.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Prep, juice and glimpse a recipe or workflow — prep_juice","text":"https://recipes.tidymodels.org/reference/update.step.html","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/prep_juice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep, juice and glimpse a recipe or workflow — prep_juice","text":"object recipe workflow object recipe","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/prep_juice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep, juice and glimpse a recipe or workflow — prep_juice","text":"","code":"recipes::recipe(spray ~ ., data = InsectSprays) |>   prep_juice() #> Rows: 72 #> Columns: 2 #> $ count <dbl> 10, 7, 20, 14, 14, 12, 10, 23, 17, 20, 14, 13, 11, 17, 21, 11, 1… #> $ spray <fct> A, A, A, A, A, A, A, A, A, A, A, A, B, B, B, B, B, B, B, B, B, B… recipes::recipe(spray ~ ., data = InsectSprays) |>   workflows::workflow(parsnip::linear_reg()) |>   prep_juice() #> Rows: 72 #> Columns: 2 #> $ count <dbl> 10, 7, 20, 14, 14, 12, 10, 23, 17, 20, 14, 13, 11, 17, 21, 11, 1… #> $ spray <fct> A, A, A, A, A, A, A, A, A, A, A, A, B, B, B, B, B, B, B, B, B, B…"},{"path":"https://jrosell.github.io/jrrosell/reference/prep_juice_ncol.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep, juice and get cols from a recipe or workflow — prep_juice_ncol","title":"Prep, juice and get cols from a recipe or workflow — prep_juice_ncol","text":"Prep, juice get cols recipe workflow","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/prep_juice_ncol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep, juice and get cols from a recipe or workflow — prep_juice_ncol","text":"","code":"prep_juice_ncol(object)"},{"path":"https://jrosell.github.io/jrrosell/reference/prep_juice_ncol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep, juice and get cols from a recipe or workflow — prep_juice_ncol","text":"object recipe workflow object recipe","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/prep_juice_ncol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep, juice and get cols from a recipe or workflow — prep_juice_ncol","text":"","code":"recipes::recipe(spray ~ ., data = InsectSprays) |>   prep_juice_ncol() #> [1] 2"},{"path":"https://jrosell.github.io/jrrosell/reference/read_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Read character columns with clean names — read_chr","title":"Read character columns with clean names — read_chr","text":"useful reading common types flat file data, comma separated values tab separated values.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/read_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read character columns with clean names — read_chr","text":"","code":"read_chr(file, delim = \",\", locale = NULL, ...)"},{"path":"https://jrosell.github.io/jrrosell/reference/read_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read character columns with clean names — read_chr","text":"file Either path file, connection, literal data (either single string raw vector). delim Single character used separate fields within record. locale locale controls defaults vary place place. default locale US-centric (like R), can use locale() create locale controls things like default time zone, encoding, decimal mark, big mark, day/month names. ... parameters readr::read_delim.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/read_chr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read character columns with clean names — read_chr","text":"read_chr function works like readr::read_delim, except column sreturned characters clean names. requires readr janitor packages installed.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/read_chr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read character columns with clean names — read_chr","text":"","code":"es <- readr::locale(\"es\", tz = \"Europe/Madrid\", decimal_mark = \",\", grouping_mark = \".\") read_chr(readr::readr_example(\"mtcars.csv\"), delim = \",\", locale = es) #> # A tibble: 32 × 11 #>    mpg   cyl   disp  hp    drat  wt    qsec  vs    am    gear  carb  #>    <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #>  1 21    6     160   110   3.9   2.62  16.46 0     1     4     4     #>  2 21    6     160   110   3.9   2.875 17.02 0     1     4     4     #>  3 22.8  4     108   93    3.85  2.32  18.61 1     1     4     1     #>  4 21.4  6     258   110   3.08  3.215 19.44 1     0     3     1     #>  5 18.7  8     360   175   3.15  3.44  17.02 0     0     3     2     #>  6 18.1  6     225   105   2.76  3.46  20.22 1     0     3     1     #>  7 14.3  8     360   245   3.21  3.57  15.84 0     0     3     4     #>  8 24.4  4     146.7 62    3.69  3.19  20    1     0     4     2     #>  9 22.8  4     140.8 95    3.92  3.15  22.9  1     0     4     2     #> 10 19.2  6     167.6 123   3.92  3.44  18.3  1     0     4     4     #> # ℹ 22 more rows"},{"path":"https://jrosell.github.io/jrrosell/reference/read_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the html text of an url — read_url","title":"Read the html text of an url — read_url","text":"useful getting text webpages single character vector.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/read_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the html text of an url — read_url","text":"","code":"read_url(url, sleep = 0)"},{"path":"https://jrosell.github.io/jrrosell/reference/read_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the html text of an url — read_url","text":"url Full url including http https protocol page path. sleep Seconds sleep request done returning result.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/read_url.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read the html text of an url — read_url","text":"read_url function works uses rvest::read_html purr::possibly fault tolearnt.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/read_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the html text of an url — read_url","text":"","code":"if (FALSE) read_url(\"https://www.google.cat/\", sleep = 1)"},{"path":"https://jrosell.github.io/jrrosell/reference/read_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a sheet from a xlsx file into a tibbles — read_xlsx","title":"Read a sheet from a xlsx file into a tibbles — read_xlsx","text":"useful reading single sheets Excel/Openoffice file.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/read_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a sheet from a xlsx file into a tibbles — read_xlsx","text":"","code":"read_xlsx(xlsxFile, ..., sheet = 1, startRow = 1)"},{"path":"https://jrosell.github.io/jrrosell/reference/read_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a sheet from a xlsx file into a tibbles — read_xlsx","text":"xlsxFile name file. ... parameters openxls::read.xlsx function sheet name index sheet (default 1) startRow number starting reading row (default 1)","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/read_xlsx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a sheet from a xlsx file into a tibbles — read_xlsx","text":"write_xlsx wroapper openxls::write.xlsx.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/read_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a sheet from a xlsx file into a tibbles — read_xlsx","text":"","code":"l <- list(\"IRIS\" = iris, \"MTCATS\" = mtcars, matrix(runif(1000), ncol = 5)) tmp_file <- tempfile(fileext = \".xlsx\") write_xlsx(l, tmp_file, colWidths = c(NA, \"auto\", \"auto\")) read_xlsx(tmp_file) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            5.1         3.5          1.4         0.2     setosa #> 2            4.9         3.0          1.4         0.2     setosa #> 3            4.7         3.2          1.3         0.2     setosa #> 4            4.6         3.1          1.5         0.2     setosa #> 5            5.0         3.6          1.4         0.2     setosa #> 6            5.4         3.9          1.7         0.4     setosa #> 7            4.6         3.4          1.4         0.3     setosa #> 8            5.0         3.4          1.5         0.2     setosa #> 9            4.4         2.9          1.4         0.2     setosa #> 10           4.9         3.1          1.5         0.1     setosa #> 11           5.4         3.7          1.5         0.2     setosa #> 12           4.8         3.4          1.6         0.2     setosa #> 13           4.8         3.0          1.4         0.1     setosa #> 14           4.3         3.0          1.1         0.1     setosa #> 15           5.8         4.0          1.2         0.2     setosa #> 16           5.7         4.4          1.5         0.4     setosa #> 17           5.4         3.9          1.3         0.4     setosa #> 18           5.1         3.5          1.4         0.3     setosa #> 19           5.7         3.8          1.7         0.3     setosa #> 20           5.1         3.8          1.5         0.3     setosa #> 21           5.4         3.4          1.7         0.2     setosa #> 22           5.1         3.7          1.5         0.4     setosa #> 23           4.6         3.6          1.0         0.2     setosa #> 24           5.1         3.3          1.7         0.5     setosa #> 25           4.8         3.4          1.9         0.2     setosa #> 26           5.0         3.0          1.6         0.2     setosa #> 27           5.0         3.4          1.6         0.4     setosa #> 28           5.2         3.5          1.5         0.2     setosa #> 29           5.2         3.4          1.4         0.2     setosa #> 30           4.7         3.2          1.6         0.2     setosa #> 31           4.8         3.1          1.6         0.2     setosa #> 32           5.4         3.4          1.5         0.4     setosa #> 33           5.2         4.1          1.5         0.1     setosa #> 34           5.5         4.2          1.4         0.2     setosa #> 35           4.9         3.1          1.5         0.2     setosa #> 36           5.0         3.2          1.2         0.2     setosa #> 37           5.5         3.5          1.3         0.2     setosa #> 38           4.9         3.6          1.4         0.1     setosa #> 39           4.4         3.0          1.3         0.2     setosa #> 40           5.1         3.4          1.5         0.2     setosa #> 41           5.0         3.5          1.3         0.3     setosa #> 42           4.5         2.3          1.3         0.3     setosa #> 43           4.4         3.2          1.3         0.2     setosa #> 44           5.0         3.5          1.6         0.6     setosa #> 45           5.1         3.8          1.9         0.4     setosa #> 46           4.8         3.0          1.4         0.3     setosa #> 47           5.1         3.8          1.6         0.2     setosa #> 48           4.6         3.2          1.4         0.2     setosa #> 49           5.3         3.7          1.5         0.2     setosa #> 50           5.0         3.3          1.4         0.2     setosa #> 51           7.0         3.2          4.7         1.4 versicolor #> 52           6.4         3.2          4.5         1.5 versicolor #> 53           6.9         3.1          4.9         1.5 versicolor #> 54           5.5         2.3          4.0         1.3 versicolor #> 55           6.5         2.8          4.6         1.5 versicolor #> 56           5.7         2.8          4.5         1.3 versicolor #> 57           6.3         3.3          4.7         1.6 versicolor #> 58           4.9         2.4          3.3         1.0 versicolor #> 59           6.6         2.9          4.6         1.3 versicolor #> 60           5.2         2.7          3.9         1.4 versicolor #> 61           5.0         2.0          3.5         1.0 versicolor #> 62           5.9         3.0          4.2         1.5 versicolor #> 63           6.0         2.2          4.0         1.0 versicolor #> 64           6.1         2.9          4.7         1.4 versicolor #> 65           5.6         2.9          3.6         1.3 versicolor #> 66           6.7         3.1          4.4         1.4 versicolor #> 67           5.6         3.0          4.5         1.5 versicolor #> 68           5.8         2.7          4.1         1.0 versicolor #> 69           6.2         2.2          4.5         1.5 versicolor #> 70           5.6         2.5          3.9         1.1 versicolor #> 71           5.9         3.2          4.8         1.8 versicolor #> 72           6.1         2.8          4.0         1.3 versicolor #> 73           6.3         2.5          4.9         1.5 versicolor #> 74           6.1         2.8          4.7         1.2 versicolor #> 75           6.4         2.9          4.3         1.3 versicolor #> 76           6.6         3.0          4.4         1.4 versicolor #> 77           6.8         2.8          4.8         1.4 versicolor #> 78           6.7         3.0          5.0         1.7 versicolor #> 79           6.0         2.9          4.5         1.5 versicolor #> 80           5.7         2.6          3.5         1.0 versicolor #> 81           5.5         2.4          3.8         1.1 versicolor #> 82           5.5         2.4          3.7         1.0 versicolor #> 83           5.8         2.7          3.9         1.2 versicolor #> 84           6.0         2.7          5.1         1.6 versicolor #> 85           5.4         3.0          4.5         1.5 versicolor #> 86           6.0         3.4          4.5         1.6 versicolor #> 87           6.7         3.1          4.7         1.5 versicolor #> 88           6.3         2.3          4.4         1.3 versicolor #> 89           5.6         3.0          4.1         1.3 versicolor #> 90           5.5         2.5          4.0         1.3 versicolor #> 91           5.5         2.6          4.4         1.2 versicolor #> 92           6.1         3.0          4.6         1.4 versicolor #> 93           5.8         2.6          4.0         1.2 versicolor #> 94           5.0         2.3          3.3         1.0 versicolor #> 95           5.6         2.7          4.2         1.3 versicolor #> 96           5.7         3.0          4.2         1.2 versicolor #> 97           5.7         2.9          4.2         1.3 versicolor #> 98           6.2         2.9          4.3         1.3 versicolor #> 99           5.1         2.5          3.0         1.1 versicolor #> 100          5.7         2.8          4.1         1.3 versicolor #> 101          6.3         3.3          6.0         2.5  virginica #> 102          5.8         2.7          5.1         1.9  virginica #> 103          7.1         3.0          5.9         2.1  virginica #> 104          6.3         2.9          5.6         1.8  virginica #> 105          6.5         3.0          5.8         2.2  virginica #> 106          7.6         3.0          6.6         2.1  virginica #> 107          4.9         2.5          4.5         1.7  virginica #> 108          7.3         2.9          6.3         1.8  virginica #> 109          6.7         2.5          5.8         1.8  virginica #> 110          7.2         3.6          6.1         2.5  virginica #> 111          6.5         3.2          5.1         2.0  virginica #> 112          6.4         2.7          5.3         1.9  virginica #> 113          6.8         3.0          5.5         2.1  virginica #> 114          5.7         2.5          5.0         2.0  virginica #> 115          5.8         2.8          5.1         2.4  virginica #> 116          6.4         3.2          5.3         2.3  virginica #> 117          6.5         3.0          5.5         1.8  virginica #> 118          7.7         3.8          6.7         2.2  virginica #> 119          7.7         2.6          6.9         2.3  virginica #> 120          6.0         2.2          5.0         1.5  virginica #> 121          6.9         3.2          5.7         2.3  virginica #> 122          5.6         2.8          4.9         2.0  virginica #> 123          7.7         2.8          6.7         2.0  virginica #> 124          6.3         2.7          4.9         1.8  virginica #> 125          6.7         3.3          5.7         2.1  virginica #> 126          7.2         3.2          6.0         1.8  virginica #> 127          6.2         2.8          4.8         1.8  virginica #> 128          6.1         3.0          4.9         1.8  virginica #> 129          6.4         2.8          5.6         2.1  virginica #> 130          7.2         3.0          5.8         1.6  virginica #> 131          7.4         2.8          6.1         1.9  virginica #> 132          7.9         3.8          6.4         2.0  virginica #> 133          6.4         2.8          5.6         2.2  virginica #> 134          6.3         2.8          5.1         1.5  virginica #> 135          6.1         2.6          5.6         1.4  virginica #> 136          7.7         3.0          6.1         2.3  virginica #> 137          6.3         3.4          5.6         2.4  virginica #> 138          6.4         3.1          5.5         1.8  virginica #> 139          6.0         3.0          4.8         1.8  virginica #> 140          6.9         3.1          5.4         2.1  virginica #> 141          6.7         3.1          5.6         2.4  virginica #> 142          6.9         3.1          5.1         2.3  virginica #> 143          5.8         2.7          5.1         1.9  virginica #> 144          6.8         3.2          5.9         2.3  virginica #> 145          6.7         3.3          5.7         2.5  virginica #> 146          6.7         3.0          5.2         2.3  virginica #> 147          6.3         2.5          5.0         1.9  virginica #> 148          6.5         3.0          5.2         2.0  virginica #> 149          6.2         3.4          5.4         2.3  virginica #> 150          5.9         3.0          5.1         1.8  virginica file.remove(tmp_file) #> [1] TRUE"},{"path":"https://jrosell.github.io/jrrosell/reference/score_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune a recipe using glmnet and lightgbm and stacks — score_recipe","title":"Tune a recipe using glmnet and lightgbm and stacks — score_recipe","text":"Tune recipe using glmnet lightgbm stacks","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/score_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune a recipe using glmnet and lightgbm and stacks — score_recipe","text":"","code":"score_recipe(rec, resamples, grids = list(10, 10), metric = \"accuracy\")"},{"path":"https://jrosell.github.io/jrrosell/reference/score_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune a recipe using glmnet and lightgbm and stacks — score_recipe","text":"rec recipe resamples rset grids glmnet lightgbm tuning metric compared","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/spain_ccaas.html","id":null,"dir":"Reference","previous_headings":"","what":"spain_ccaas — spain_ccaas","title":"spain_ccaas — spain_ccaas","text":"spain_ccaas","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/spain_ccaas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spain_ccaas — spain_ccaas","text":"","code":"spain_ccaas"},{"path":[]},{"path":"https://jrosell.github.io/jrrosell/reference/spain_ccaas.html","id":"spain-ccaas","dir":"Reference","previous_headings":"","what":"spain_ccaas","title":"spain_ccaas — spain_ccaas","text":"sf object 19 rows 4 columns: OBJECTID  codigo  nombre  geometry","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/spain_ccaas.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"spain_ccaas — spain_ccaas","text":"https://github.com/koldLight/curso-r-dataviz/blob/master/dat/spain_ccaas.geojson","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/spain_ccaas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spain_ccaas — spain_ccaas","text":"","code":"library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE data(spain_ccaas) head(spain_ccaas) #> Simple feature collection with 6 features and 3 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -2.1165 ymin: -1.7197 xmax: 1.6146 ymax: -0.7477 #> Geodetic CRS:  WGS 84 #> # A tibble: 6 × 4 #>   OBJECTID codigo nombre                                                geometry #>      <int>  <int> <chr>                                       <MULTIPOLYGON [°]> #> 1        1     12 Galicia                      (((-1.7038 -1.5727, -1.7318 -1.5… #> 2        2     16 País Vasco                   (((-0.1135 -1.1183, -0.1973 -1.0… #> 3        3     15 Navarra (Comunidad Foral de) (((0.1863 -1.2973, 0.1816 -1.297… #> 4        4      6 Cantabria                    (((-0.5586 -1.0557, -0.6871 -0.9… #> 5        5      3 Asturias (Principado de)     (((-1.3841 -1.1094, -1.387 -1.05… #> 6        6      9 Cataluña                     (((0.8942 -1.7197, 0.8129 -1.667…"},{"path":"https://jrosell.github.io/jrrosell/reference/spain_provinces.html","id":null,"dir":"Reference","previous_headings":"","what":"spain_provinces — spain_provinces","title":"spain_provinces — spain_provinces","text":"spain_provinces","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/spain_provinces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spain_provinces — spain_provinces","text":"","code":"spain_provinces"},{"path":[]},{"path":"https://jrosell.github.io/jrrosell/reference/spain_provinces.html","id":"spain-provinces","dir":"Reference","previous_headings":"","what":"spain_provinces","title":"spain_provinces — spain_provinces","text":"sf object 60 rows 4 columns: OBJECTID  codigo  nombre  geometry","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/spain_provinces.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"spain_provinces — spain_provinces","text":"https://github.com/koldLight/curso-r-dataviz/blob/master/dat/spain_provinces.geojson","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/spain_provinces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spain_provinces — spain_provinces","text":"","code":"library(sf) data(spain_provinces) head(spain_provinces) #> Simple feature collection with 6 features and 3 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -1.8386 ymin: 3.6739 xmax: 0.7771 ymax: 4.2623 #> Geodetic CRS:  WGS 84 #> # A tibble: 6 × 4 #>   OBJECTID codigo nombre                                                geometry #>      <int>  <int> <chr>                                            <POLYGON [°]> #> 1        1     20 Guipúzcoa  ((0.3515 4.0509, 0.2355 4.1197, 0.2355 4.2006, 0.2… #> 2        2     15 Coruña (A) ((-1.601 3.7516, -1.6469 3.7784, -1.6845 3.7593, -… #> 3        3     48 Vizcaya    ((0.053 4.0646, -0.01 4.1035, -0.01 4.1277, 0.0123… #> 4        4     31 Navarra    ((0.6115 3.6739, 0.5459 3.7058, 0.5465 3.7752, 0.3… #> 5        5     39 Cantabria  ((-0.1907 3.9288, -0.3244 4.0103, -0.3652 3.988, -… #> 6        6     33 Asturias   ((-1.0583 3.8709, -1.0583 3.9308, -1.1265 3.9792, …"},{"path":"https://jrosell.github.io/jrrosell/reference/sum_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum the missing values from a data.frame — sum_missing","title":"Sum the missing values from a data.frame — sum_missing","text":"Sum missing values data.frame","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/sum_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum the missing values from a data.frame — sum_missing","text":"","code":"sum_missing(...)"},{"path":"https://jrosell.github.io/jrrosell/reference/sum_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum the missing values from a data.frame — sum_missing","text":"... one multiple data.frame","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/sum_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum the missing values from a data.frame — sum_missing","text":"","code":"sum_missing(data.frame(a = c(1, 2), b = c(3, 4))) #> data.frame(a = c(1, 2), b = c(3, 4)) has 0 missing values.  sum_missing(data.frame(a = c(1, NA), b = c(3, 4))) #> data.frame(a = c(1, NA), b = c(3, 4)) has 1 missing values.  sum_missing(data.frame(a = c(1, NA), b = c(NA, 4))) #> data.frame(a = c(1, NA), b = c(NA, 4)) has 2 missing values.  sum_missing(data.frame(a = c(NA, NA), b = c(NA, NA))) #> data.frame(a = c(NA, NA), b = c(NA, NA)) has 4 missing values."},{"path":"https://jrosell.github.io/jrrosell/reference/summarize_n_distinct.html","id":null,"dir":"Reference","previous_headings":"","what":"Select constant columns from a data.frame — summarize_n_distinct","title":"Select constant columns from a data.frame — summarize_n_distinct","text":"Select constant columns data.frame","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/summarize_n_distinct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select constant columns from a data.frame — summarize_n_distinct","text":"","code":"summarize_n_distinct(df)"},{"path":"https://jrosell.github.io/jrrosell/reference/summarize_n_distinct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select constant columns from a data.frame — summarize_n_distinct","text":"df data.frame","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/summarize_n_distinct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select constant columns from a data.frame — summarize_n_distinct","text":"","code":"summarize_n_distinct(data.frame(a = c(1, 2), b = c(2, 3))) #>   a b #> 1 2 2 summarize_n_distinct(data.frame(a = c(1, 1), b = c(2, 3))) #>   a b #> 1 1 2"},{"path":"https://jrosell.github.io/jrrosell/reference/tee.html","id":null,"dir":"Reference","previous_headings":"","what":"Tee pipe that return the original value instead of the result — tee","title":"Tee pipe that return the original value instead of the result — tee","text":"Pipe value forward functio call expression return original value instead result. useful expression used side-effect, say plotting printing.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/tee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tee pipe that return the original value instead of the result — tee","text":"","code":"tee(x, expr)"},{"path":"https://jrosell.github.io/jrrosell/reference/tee.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Tee pipe that return the original value instead of the result — tee","text":"https://mastodon.social/@multimeric@genomic.social/109555362766969210","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/tee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tee pipe that return the original value instead of the result — tee","text":"x object expr expresion","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/tee.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tee pipe that return the original value instead of the result — tee","text":"tee pipe works like |>, except return value x , result expr call.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/tee.html","id":"thanks","dir":"Reference","previous_headings":"","what":"Thanks","title":"Tee pipe that return the original value instead of the result — tee","text":"want give credit Michael Milton Matthew Kay idea code.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/tee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tee pipe that return the original value instead of the result — tee","text":"","code":"rnorm(200) |>   matrix(ncol = 2) |>   as.data.frame() |>   tee(\\(x) {     ggplot(x, aes(V1, V2)) +       geom_point()   }) |>   colSums() #>          V1          V2  #> -16.6280467  -0.4026242"},{"path":"https://jrosell.github.io/jrrosell/reference/theme_roboto.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets a minimal theme using the Roboto font family — theme_roboto","title":"Sets a minimal theme using the Roboto font family — theme_roboto","text":"requires roboto fonts installed O.S. run z","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/theme_roboto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets a minimal theme using the Roboto font family — theme_roboto","text":"","code":"theme_roboto(   base_size = 11,   strip_text_size = 12,   strip_text_margin = 5,   subtitle_size = 13,   subtitle_margin = 10,   plot_title_size = 16,   plot_title_margin = 10,   ... )"},{"path":"https://jrosell.github.io/jrrosell/reference/theme_roboto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets a minimal theme using the Roboto font family — theme_roboto","text":"base_size = 11 strip_text_size = 12 strip_text_margin = 5 subtitle_size = 13 subtitle_margin = 10 plot_title_size = 16 plot_title_margin = 10 ... parameters passed theme_set","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/theme_roboto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets a minimal theme using the Roboto font family — theme_roboto","text":"","code":"library(jrrosell) library(ggplot2) theme_set(theme_roboto()) ggplot(iris, aes(Species)) +   geom_bar()"},{"path":"https://jrosell.github.io/jrrosell/reference/theme_set_roboto_darkblue.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets a dark blue colored dark minimal theme using the Roboto font family — theme_set_roboto_darkblue","title":"Sets a dark blue colored dark minimal theme using the Roboto font family — theme_set_roboto_darkblue","text":"Sets dark blue colored dark minimal theme using Roboto font family","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/theme_set_roboto_darkblue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets a dark blue colored dark minimal theme using the Roboto font family — theme_set_roboto_darkblue","text":"","code":"theme_set_roboto_darkblue(...)"},{"path":"https://jrosell.github.io/jrrosell/reference/theme_set_roboto_darkblue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets a dark blue colored dark minimal theme using the Roboto font family — theme_set_roboto_darkblue","text":"... parameters passed theme_set","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/theme_set_roboto_darkblue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets a dark blue colored dark minimal theme using the Roboto font family — theme_set_roboto_darkblue","text":"","code":"library(jrrosell) library(ggplot2) theme_set_roboto_darkblue() ggplot(iris, aes(Species)) +   geom_bar()"},{"path":"https://jrosell.github.io/jrrosell/reference/update_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Update recipe step values by id — update_step","title":"Update recipe step values by id — update_step","text":"Update vaules specific recipe step located id","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/update_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update recipe step values by id — update_step","text":"","code":"update_step(object, target_id, ...)"},{"path":"https://jrosell.github.io/jrrosell/reference/update_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update recipe step values by id — update_step","text":"object recipe workflow object recipe target_id id name step ... arguments update step.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/update_step.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update recipe step values by id — update_step","text":"","code":"recipes::recipe(spray ~ ., data = InsectSprays) |>   recipes::step_ns(count, deg_free = hardhat::tune(), id = \"ns\") |>   update_step(\"ns\", deg_free = 1) #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs  #> Number of variables by role #> outcome:   1 #> predictor: 1 #>  #> ── Operations  #> • Natural splines on: count"},{"path":"https://jrosell.github.io/jrrosell/reference/workflow_boost_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an xgboost tunable workflow for regression and classification — workflow_boost_tree","title":"Create an xgboost tunable workflow for regression and classification — workflow_boost_tree","text":"Create xgboost tunable workflow regression classification","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/workflow_boost_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an xgboost tunable workflow for regression and classification — workflow_boost_tree","text":"","code":"workflow_boost_tree(rec, engine = \"xgboost\", counts = TRUE, ...)"},{"path":"https://jrosell.github.io/jrrosell/reference/workflow_boost_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an xgboost tunable workflow for regression and classification — workflow_boost_tree","text":"rec prerocessing recipe build workflow engine xgboost, lightgbm (xgboost default) counts Optional logic argument wether mtry use counts ... optional engine arguments","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/workflow_boost_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an xgboost tunable workflow for regression and classification — workflow_boost_tree","text":"","code":"library(tidymodels) library(xgboost) library(modeldata) library(future) data(cells) split <- cells |>   mutate(across(where(is.character), as.factor)) |>   sample_n(500) |>   initial_split(strata = class) train <- training(split) folds <- vfold_cv(train, v = 2, strata = class) wf <- train |>   recipe(case ~ .) |>   step_integer(all_nominal_predictors()) |>   workflow_boost_tree() doFuture::registerDoFuture() plan(sequential) res <- wf |>   tune::tune_grid(     folds,     grid = 2,     metrics = metric_set(roc_auc),     control = tune::control_grid(save_workflow = TRUE, verbose = FALSE)   ) #> i Creating pre-processing data to finalize unknown parameter: mtry res |> collect_metrics() #> # A tibble: 2 × 13 #>    mtry trees min_n tree_depth learn_rate loss_reduction sample_size .metric #>   <int> <int> <int>      <int>      <dbl>          <dbl>       <dbl> <chr>   #> 1    26    13    20         11    0.00334  0.00000000359       0.614 roc_auc #> 2    43  1605    40          2    0.256    0.00210             0.285 roc_auc #> # ℹ 5 more variables: .estimator <chr>, mean <dbl>, n <int>, std_err <dbl>, #> #   .config <chr> res |> last_fit_metrics(split, \"roc_auc\") #> # A tibble: 3 × 4 #>   .metric     .estimator .estimate .config              #>   <chr>       <chr>          <dbl> <chr>                #> 1 accuracy    binary         0.552 Preprocessor1_Model1 #> 2 roc_auc     binary         0.534 Preprocessor1_Model1 #> 3 brier_class binary         0.250 Preprocessor1_Model1 best <- res |> fit_best() best |>   augment(testing(split)) |>   roc_auc(case, .pred_Test) |>   pull(.estimate) #> [1] 0.5352203"},{"path":"https://jrosell.github.io/jrrosell/reference/workflow_elasticnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tuneable glmnet worfklow for regression and classification — workflow_elasticnet","title":"Create a tuneable glmnet worfklow for regression and classification — workflow_elasticnet","text":"Create tuneable glmnet worfklow regression classification","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/workflow_elasticnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tuneable glmnet worfklow for regression and classification — workflow_elasticnet","text":"","code":"workflow_elasticnet(rec, engine = \"glmnet\", ...)"},{"path":"https://jrosell.github.io/jrrosell/reference/workflow_elasticnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tuneable glmnet worfklow for regression and classification — workflow_elasticnet","text":"rec prerocessing recipe build workflow engine glmnet, spark, brulee (glmnet default) ... Optional engine arguments","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/workflow_elasticnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a tuneable glmnet worfklow for regression and classification — workflow_elasticnet","text":"","code":"library(tidymodels) library(glmnet) #> Loading required package: Matrix #>  #> Attaching package: ‘Matrix’ #> The following objects are masked from ‘package:tidyr’: #>  #>     expand, pack, unpack #> Loaded glmnet 4.1-8 library(modeldata) library(future) data(cells) split <- cells |>   mutate(across(where(is.character), as.factor)) |>   sample_n(500) |>   initial_split(strata = class) train <- training(split) folds <- vfold_cv(train, v = 2, strata = class) wf <- train |>   recipe(case ~ .) |>   step_integer(all_nominal_predictors()) |>   workflow_elasticnet() #> [1] \"logistic_reg binary classification\" doFuture::registerDoFuture() plan(sequential) res <- wf |>   tune::tune_grid(     folds,     grid = 2,     metrics = metric_set(roc_auc),     control = tune::control_grid(save_workflow = TRUE, verbose = FALSE)   ) res |> collect_metrics() #> # A tibble: 2 × 8 #>    penalty mixture .metric .estimator  mean     n std_err .config              #>      <dbl>   <dbl> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                #> 1 1.10e- 4   0.136 roc_auc binary     0.549     2 0.00534 Preprocessor1_Model1 #> 2 2.28e-10   0.946 roc_auc binary     0.546     2 0.00422 Preprocessor1_Model2 res |> last_fit_metrics(split, \"roc_auc\") #> # A tibble: 3 × 4 #>   .metric     .estimator .estimate .config              #>   <chr>       <chr>          <dbl> <chr>                #> 1 accuracy    binary         0.484 Preprocessor1_Model1 #> 2 roc_auc     binary         0.508 Preprocessor1_Model1 #> 3 brier_class binary         0.287 Preprocessor1_Model1 best <- res |> fit_best() best |>   augment(testing(split)) |>   roc_auc(case, .pred_Test) |>   pull(.estimate) #> [1] 0.5083165"},{"path":"https://jrosell.github.io/jrrosell/reference/write_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a list of tibbles to a xlsx file — write_xlsx","title":"Write a list of tibbles to a xlsx file — write_xlsx","text":"useful saving multiple data multiple sheets single Excel/Openoffice/libreoffice file.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/write_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a list of tibbles to a xlsx file — write_xlsx","text":"","code":"write_xlsx(data, distfile, ...)"},{"path":"https://jrosell.github.io/jrrosell/reference/write_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a list of tibbles to a xlsx file — write_xlsx","text":"data named list tibbles distfile name destination file. ... parameters openxls::write.xlsx function","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/write_xlsx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a list of tibbles to a xlsx file — write_xlsx","text":"write_xlsx wroapper openxls::write.xlsx.","code":""},{"path":"https://jrosell.github.io/jrrosell/reference/write_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a list of tibbles to a xlsx file — write_xlsx","text":"","code":"l <- list(\"IRIS\" = iris, \"MTCATS\" = mtcars, matrix(runif(1000), ncol = 5)) tmp_file <- tempfile(fileext = \".xlsx\") write_xlsx(l, tmp_file, colWidths = c(NA, \"auto\", \"auto\")) file.remove(tmp_file) #> [1] TRUE"}]
